{
  "name": "Expanding-collection",
  "tagline": "ExpandingCollection is a card peek/pop controller",
  "body": "[![header](https://raw.githubusercontent.com/Ramotion/expanding-collection/master/header.png)](https://business.ramotion.com?utm_source=gthb&utm_medium=special&utm_campaign=expanding-collection-logo)\r\n\r\n# expanding-collection\r\n\r\n[![Twitter](https://img.shields.io/badge/Twitter-@Ramotion-blue.svg?style=flat)](http://twitter.com/Ramotion)\r\n[![CocoaPods](https://img.shields.io/cocoapods/p/expanding-collection.svg)](https://cocoapods.org/pods/expanding-collection)\r\n[![CocoaPods](https://img.shields.io/cocoapods/v/expanding-collection.svg)](http://cocoapods.org/pods/expanding-collection)\r\n[![CocoaPods](https://img.shields.io/cocoapods/metrics/doc-percent/expanding-collection.svg)](https://cdn.rawgit.com/Ramotion/expanding-collection/master/docs/index.html)\r\n\r\n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Ramotion/expanding-collection)\r\n[![Travis](https://travis-ci.org/Ramotion/expanding-collection.svg?branch=master)](https://travis-ci.org/Ramotion/expanding-collection)\r\n[![codebeat badge](https://codebeat.co/badges/6a009992-5bf2-4730-aa35-f3b20ce7693d)](https://codebeat.co/projects/github-com-ramotion-expanding-collection)\r\n\r\n## About\r\nThis project is maintained by Ramotion, Inc.<br>\r\nWe specialize in the designing and coding of custom UI for Mobile Apps and Websites.<br><br>**Looking for developers for your project?** [[▶︎CONTACT OUR TEAM◀︎](http://business.ramotion.com?utm_source=gthb&utm_medium=special&utm_campaign=expanding-collection-contact-us/#Get_in_Touch)]\r\n\r\n\r\n[![Animation](https://raw.githubusercontent.com/Ramotion/expanding-collection/master/preview.gif)](https://dribbble.com/shots/2741477-iOS-Expanding-Collection-Open-Source)\r\n\r\nThe [iPhone mockup](https://store.ramotion.com/product/iphone-6-mockups?utm_source=gthb&utm_medium=special&utm_campaign=expanding-collection) available [here](https://store.ramotion.com/product/iphone-6-mockups?utm_source=gthb&utm_medium=special&utm_campaign=expanding-collection).\r\n\r\n## Requirements\r\n\r\n- iOS 9.0+\r\n- Xcode 8\r\n\r\n## Installation\r\n\r\nJust add the Source folder to your project.\r\n\r\nor use [CocoaPods](https://cocoapods.org) with Podfile:\r\n``` ruby\r\npod 'expanding-collection', '~> 1.0.3' swift 3\r\n\r\npod 'expanding-collection', '~> 0.3.2' swift 2\r\n```\r\nor [Carthage](https://github.com/Carthage/Carthage) users can simply add to their `Cartfile`:\r\n```\r\ngithub \"Ramotion/expanding-collection\"\r\n```\r\n\r\n## Usage\r\n\r\n```swift\r\nimport expanding_collection\r\n```\r\n\r\n#### Create CollectionViewCell\r\n![cell](https://raw.githubusercontent.com/Ramotion/expanding-collection/master/images/image2.png)\r\n\r\n1) Create UICollectionViewCell inherit from `BasePageCollectionCell` (recommend create cell with xib file)\r\n\r\n2) Adding FrontView\r\n  - add a view to YOURCELL.xib and connect it to `@IBOutlet weak var frontContainerView: UIView!`  \r\n  - add width, height, centerX and centerY constraints (width and height constranints must equal cellSize)\r\n\r\n  ![cell](https://raw.githubusercontent.com/Ramotion/expanding-collection/master/images/image1.png)  \r\n  - connect centerY constraint to `@IBOutlet weak var frontConstraintY: NSLayoutConstraint!`\r\n  - add any desired uiviews to frontView\r\n\r\n3) Adding BackView\r\n  - repeat step 2 (connect outlets to `@IBOutlet weak var backContainerView: UIView!`, `@IBOutlet weak var backConstraintY: NSLayoutConstraint!`)\r\n\r\n4) Cell example [DemoCell](https://github.com/Ramotion/expanding-collection/tree/master/DemoExpandingCollection/DemoExpandingCollection/ViewControllers/DemoViewController/Cells)\r\n\r\n###### If set `tag = 101` for any `FrontView.subviews` this view will be hidden during the transition animation\r\n\r\n#### Create CollectionViewController  \r\n\r\n1) Create a UIViewController inheriting from `ExpandingViewController`\r\n\r\n2) Register Cell and set Cell size:\r\n\r\n``` swift\r\noverride func viewDidLoad() {\r\n    itemSize = CGSize(width: 214, height: 264)\r\n    super.viewDidLoad()\r\n\r\n    // register cell\r\n    let nib = UINib(nibName: \"NibName\", bundle: nil)\r\n    collectionView?.registerNib(nib, forCellWithReuseIdentifier: \"CellIdentifier\")\r\n}\r\n```\r\n\r\n3) Add UICollectionViewDataSource methods\r\n\r\n``` swift\r\nextension YourViewController {\r\n\r\n  override func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {\r\n    return items.count\r\n  }\r\n\r\n  override func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {\r\n    let cell = collectionView.dequeueReusableCellWithReuseIdentifier(\"CellIdentifier\"), forIndexPath: indexPath)\r\n    // configure cell\r\n    return cell\r\n  }\r\n}\r\n```\r\n\r\n4) Open Cell animation\r\n\r\n```swift\r\noverride func viewDidLoad() {\r\n    itemSize = CGSize(width: 214, height: 264)\r\n    super.viewDidLoad()\r\n\r\n    // register cell\r\n    let nib = UINib(nibName: \"CellIdentifier\", bundle: nil)\r\n    collectionView?.registerNib(nib, forCellWithReuseIdentifier: String(DemoCollectionViewCell))\r\n}\r\n```\r\n\r\n``` swift\r\nfunc collectionView(collectionView: UICollectionView, didSelectItemAtIndexPath indexPath: NSIndexPath) {\r\n    cell.cellIsOpen(!cell.isOpened)\r\n}\r\n```\r\n\r\n###### if you use this delegates method:\r\n```Swift\r\nfunc collectionView(collectionView: UICollectionView, willDisplayCell cell: UICollectionViewCell, forItemAtIndexPath indexPath: NSIndexPath)\r\n\r\nfunc scrollViewDidEndDecelerating(scrollView: UIScrollView)\r\n```\r\n###### must call super method:  \r\n```Swift\r\nfunc collectionView(collectionView: UICollectionView, willDisplayCell cell: UICollectionViewCell, forItemAtIndexPath indexPath: NSIndexPath) {\r\n  super.collectionView(collectionView: collectionView, willDisplayCell cell: cell, forItemAtIndexPath indexPath: indexPath)\r\n  // code\r\n}\r\n\r\nfunc scrollViewDidEndDecelerating(scrollView: UIScrollView) {\r\n  super.scrollViewDidEndDecelerating(scrollView: scrollView)\r\n  // code\r\n}\r\n```\r\n#### Transition animation\r\n\r\n1) Create a UITableViewController inheriting from `ExpandingTableViewController`\r\n\r\n2) Set header height default 236\r\n\r\n``` swift\r\noverride func viewDidLoad() {\r\n    super.viewDidLoad()\r\n    headerHeight = ***\r\n}  \r\n```\r\n\r\n3) Call the push method in YourViewController to YourTableViewController\r\n\r\n``` swift\r\n  if cell.isOpened == true {\r\n    let vc: YourTableViewController = // ... create view controller  \r\n    pushToViewController(vc)\r\n  }\r\n```\r\n4) For back transition use `popTransitionAnimation()`\r\n\r\n\r\n## License\r\n\r\nExpanding collection is released under the MIT license.\r\nSee [LICENSE](./LICENSE) for details.\r\n\r\n## Follow us\r\n\r\n[![Twitter URL](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=https://github.com/ramotion/expanding-collection)\r\n[![Twitter Follow](https://img.shields.io/twitter/follow/ramotion.svg?style=social)](https://twitter.com/ramotion)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}